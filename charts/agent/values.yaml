# Default values for convoy agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  convoy:
    # Default values for standalone deployment - can be overridden by parent chart
    license_key: ""
    license_key_secret_name: ""
    jwt_secret: "convoy-secret"
    jwt_refresh_secret: "convoy-refresh-secret"
    jwt_secret_name: ""
    cacert_secret_name: ""
    cacert_content: ""
    google_oauth_enabled: false
    google_oauth_client_id: ""
    google_oauth_redirect_url: ""
    portal_realm_enabled: false
    sentry_sample_rate: 1.0
    read_replica_dsn: ""

  externalDatabase:
    enabled: false
    host: "postgresql"
    password: "postgres"
    database: "convoy"
    secret: ""
    username: "postgres"
    options: "sslmode=disable&connect_timeout=30"
    port: 5432
    readReplicas: {}

  nativeRedis:
    enabled: true
    host: "redis-master"
    password: "convoy"
    secret: ""
    port: 6379

  externalRedis:
    enabled: false
    addresses: ""
    host: "redis-master"
    scheme: "redis"
    username: ""
    password: ""
    secret: ""
    database: "0"
    port: "6379"

app:
  replicaCount: 1
  port: 5008
  resources: {}
  # limits:
  #   cpu: 1000m
  #   memory: 2000Mi
  # requests:
  #   cpu: 1000m
  #   memory: 1000Mi
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "{{ .Values.app.port }}"

env:
  environment: "oss"
  proxy: ""
  sign_up_enabled: false
  log_level: "error"
  auth:
    file:
      basic: []
      # -- If this secret parameter is not empty, basic auth inline value will be ignored. The basic auth config should be in the 'basic_auth_config' key
      secret: ""
  smtp:
    enabled: false
    from: ""
    # -- Ignored in case of secret parameter with non-empty value
    password: ""
    # -- If this secret parameter is not empty, password value will be ignored. The password in the secret should be in the 'password' key
    secret: ""
    port: 0
    provider: ""
    url: ""
    username: ""
    ssl: false
    reply_to: ""
  tracer:
    enabled: false
    type: "otel"
    otel:
      otel_auth:
        header_name: ""
        header_value: ""
      sample_rate: 1
      collector_url: ""
      insecure_skip_verify: true
    sentry:
      dsn: ""
  pyroscope:
    enabled: false
    url: ""
    username: ""
    password: ""
    profile_id: ""
  enable_feature_flag: []
  retention_policy:
    enabled: false
    policy: 720h
  analytics_enabled: true
  storage:
    enabled: false
    type: ""
    on_prem:
      path: ""
    s3:
      bucket: ""
      prefix: ""
      accessKey: ""
      # -- Ignored in case of secret parameter with non-empty value
      secretKey: ""
      # -- If this secret parameter is not empty, secretKey value will be ignored. The password in the secret should be in the 'secretKey' key
      secret: ""
      region: ""
      session_token: ""
      endpoint: ""
  consumer_pool_size: 100
  enable_profiling: false
  metrics:
    enabled: false
    metrics_backend: prometheus
    prometheus_metrics:
      sample_time: 5
  instance_ingest_rate: 100
  worker_execution_mode: default
  max_retry_seconds: 7200
  license_key: ""
  dispatcher:
    insecure_skip_verify: false
    allow_list: ["0.0.0.0/0"]
    deny_list: ["127.0.0.1/8", "169.254.169.254/32"]

# These values serve as defaults for standalone deployment
# When deployed as a subchart, these can be overridden by parent values:
# - global.convoy.image
# - global.convoy.tag
image:
  repository: getconvoy/convoy
  pullPolicy: IfNotPresent
  tag: v25.9.2

nameOverride: "convoy-agent"
fullNameOverride: "convoy-agent"

service:
  type: ClusterIP
  port: 80

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget: {}
#  maxUnavailable: 1
#  minAvailable: 1

# Extra environment variables to be set in the agent pods
extraEnvs: []
  # - name: CUSTOM_ENV_VAR
  #   value: "custom_value"
  # - name: SECRET_ENV_VAR
  #   valueFrom:
  #     secretKeyRef:
  #       name: my-secret
  #       key: secret-key

nodeSelector: {}
tolerations: []
affinity: {}
securityContext: {}
